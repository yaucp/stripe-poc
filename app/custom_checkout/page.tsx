"use client";
// Create payment intent first! (guides you through the process of collecting a payment from your customer.)
// Create exactly one PaymentIntent for each order or customer session in your system

import { Elements } from "@stripe/react-stripe-js";
import { useEffect, useState } from "react";
import getStripe from "@/helpers/getStripe";
import { Appearance, StripeElementsOptions } from "@stripe/stripe-js";
import CheckoutForm from "@/components/CheckoutForm";

const stripePromise = getStripe();
export default function CustomCheckout() {
  const [clientSecret, setClientSecret] = useState<string | null>(null);
  const [paymentIntentId, setPaymentIntentId] = useState<string | null>(null);
  // The unqiue userid should be generated by the server beforehand when the user logged in/authenticated to track user
  // We should also authenticate the request is actually signed in the server-side by the user or not when we create payment intent(JWT?)
  const customerId = Date.now();

  useEffect(() => {
    const createIntent = async () => {
      try {
        const res = await fetch("/api/payment_intent", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify({
            items: [
              { id: 1, quantity: 3 },
              { id: 2, quantity: 1 },
            ],
            customerId,
          }),
        });

        const paymentIntent = await res.json();
        if (paymentIntent.clientSecret === undefined) {
          alert("No client secret");
          //     Handle this by going back/retry?
        }
        console.log(`First: ${paymentIntent.clientSecret}`);
        setClientSecret(paymentIntent.clientSecret);
        setPaymentIntentId(paymentIntent.id);
        console.log(`Set: ${clientSecret}`);
      } catch (e) {
        console.log("LMAO error dummy");
        alert(e);
        return;
      }
    };

    createIntent();
  }, []);

  // Appearance ref: https://stripe.com/docs/elements/appearance-api
  // The only way to customize of the background, fonts, border, etc.....
  const appearance: Appearance = {
    theme: "stripe",
  };
  const options: StripeElementsOptions = {
    clientSecret: clientSecret ?? undefined,
    appearance,
    locale: "en",
  };

  return (
    <div className="wl-auto p-4">
      <h1 className="text-2xl bold mb-4 mt-4 text-center">
        Accept payments with credit card
      </h1>
      {clientSecret && paymentIntentId && (
        <Elements options={options} stripe={stripePromise}>
          <h1>Payment Intent Id: {paymentIntentId}</h1>
          <CheckoutForm
            clientSecret={clientSecret}
            paymentIntentId={paymentIntentId}
          />
        </Elements>
      )}
    </div>
  );
}
